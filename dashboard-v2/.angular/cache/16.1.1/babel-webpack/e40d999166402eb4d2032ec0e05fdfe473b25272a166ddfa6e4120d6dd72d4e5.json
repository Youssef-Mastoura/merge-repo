{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = \"http://localhost:8089/skillswap\";\n  }\n  getUsers() {\n    return this.http.get(`${this.apiServerUrl}/user/all`);\n  }\n  addUser(user) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer your-token' // Si nécessaire\n    });\n\n    return this.http.post(`${this.apiServerUrl}/user/register`, user, {\n      headers\n    });\n  }\n  updateEmployee(user) {\n    return this.http.put(`${this.apiServerUrl}update`, user);\n  }\n  deleteUser(userId) {\n    return this.http.delete(`${this.apiServerUrl}delete/${userId}`);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","UserService","constructor","http","apiServerUrl","getUsers","get","addUser","user","headers","post","updateEmployee","put","deleteUser","userId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sakka\\Desktop\\PICLOUD-GestionUser\\dashboard-v2\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from './models/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiServerUrl =\"http://localhost:8089/skillswap\";\n\n  constructor(private http: HttpClient){}\n\n  public getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.apiServerUrl}/user/all`);\n  }\n\n  public addUser(user: User): Observable<User> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer your-token' // Si nécessaire\n    });\n    return this.http.post<User>(`${this.apiServerUrl}/user/register`, user, { headers })\n  }\n\n  public updateEmployee(user: User): Observable<User> {\n    return this.http.put<User>(`${this.apiServerUrl}update`, user);\n  }\n\n  public deleteUser(userId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}delete/${userId}`);\n  }\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAE,iCAAiC;EAEjB;EAE/BC,QAAQA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,YAAY,WAAW,CAAC;EAC/D;EAEOG,OAAOA,CAACC,IAAU;IACvB,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,mBAAmB,CAAC;KACtC,CAAC;;IACF,OAAO,IAAI,CAACG,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACN,YAAY,gBAAgB,EAAEI,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EACtF;EAEOE,cAAcA,CAACH,IAAU;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,YAAY,QAAQ,EAAEI,IAAI,CAAC;EAChE;EAEOK,UAAUA,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,YAAY,UAAUU,MAAM,EAAE,CAAC;EACvE;;AAxBWb,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}