{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventserviceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8089/skillswap/event';\n  }\n  getEvent(id) {\n    return this.http.get(`${this.baseUrl}/get-Eventbyid/${id}`);\n  }\n  createEvent(event) {\n    return this.http.post(`${this.baseUrl}/addEvent`, event);\n  }\n  updateEvent(id, event) {\n    return this.http.put(`${this.baseUrl}/updateEvent`, event);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.baseUrl}/deleteEvent/${id}`);\n  }\n  getAllEvents() {\n    return this.http.get(`${this.baseUrl}/getAllEvent`);\n  }\n  register(registration, userId, eventId) {\n    return this.http.post(`http://localhost:8089/skillswap/eventregistration/add_registration_with_user_and_event/${userId}/${eventId}`, registration);\n  }\n  rating(eventId) {\n    return this.http.get(`http://localhost:8089/skillswap/feedback/get_sum_feedback/${eventId}`);\n  }\n  participants(eventId) {\n    return this.http.get(`http://localhost:8089/skillswap/eventregistration/get_participants/${eventId}`);\n  }\n  getregistrationsevent(eventId) {\n    return this.http.get(`http://localhost:8089/skillswap/eventregistration/get_all_registration/${eventId}`);\n  }\n  getregistrationuser(registrationId) {\n    return this.http.get(`http://localhost:8089/skillswap/eventregistration/getregistrationuser/${registrationId}`);\n  }\n  deleteregistraion(registrationId) {\n    return this.http.delete(`http://localhost:8089/skillswap/eventregistration/deleteEventRegistration/${registrationId}`);\n  }\n  mailing(userId, eventId, htmlContent) {\n    return this.http.post(`${this.baseUrl}/send_event_notification/${userId}/${eventId}`, null, {\n      responseType: 'text'\n    });\n  }\n}\nEventserviceService.ɵfac = function EventserviceService_Factory(t) {\n  return new (t || EventserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventserviceService,\n  factory: EventserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EventserviceService","constructor","http","baseUrl","getEvent","id","get","createEvent","event","post","updateEvent","put","deleteEvent","delete","getAllEvents","register","registration","userId","eventId","rating","participants","getregistrationsevent","getregistrationuser","registrationId","deleteregistraion","mailing","htmlContent","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\4 ARCTIC YOUSSEF\\PI\\user+event+course\\PI\\final\\dashboard-v2\\src\\app\\eventbackoffice\\serviceseventback\\eventservice.service.ts"],"sourcesContent":["import { registration } from '../../registration';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { myevent } from '../../event';\nimport { User } from 'src/app/back-office/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventserviceService {\n\n  private baseUrl = 'http://localhost:8089/skillswap/event'; \n\n  constructor(private http: HttpClient) { }\n  \n  getEvent(id: number): Observable<myevent> {\n    return this.http.get<myevent>(`${this.baseUrl}/get-Eventbyid/${id}`); \n  }\n  createEvent(event: myevent): Observable<myevent> {\n    return this.http.post<myevent>(`${this.baseUrl}/addEvent`, event); \n  }\n  updateEvent(id: number, event: myevent): Observable<myevent> {\n    return this.http.put<myevent>(`${this.baseUrl}/updateEvent`, event); \n  }\n  deleteEvent(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/deleteEvent/${id}`); \n  }\n  getAllEvents(): Observable<myevent[]> {\n    return this.http.get<myevent[]>(`${this.baseUrl}/getAllEvent`); \n  }\nregister(registration: registration, userId: number, eventId: number): Observable<registration> {\n  return this.http.post<registration>(`http://localhost:8089/skillswap/eventregistration/add_registration_with_user_and_event/${userId}/${eventId}`, registration);\n}\n\nrating (eventId: number): Observable<any> {\n  return this.http.get<any>(`http://localhost:8089/skillswap/feedback/get_sum_feedback/${eventId}`);\n}\n\nparticipants(eventId: number): Observable<User[]> {\n  return this.http.get<User[]>(`http://localhost:8089/skillswap/eventregistration/get_participants/${eventId}`);\n}\n\ngetregistrationsevent(eventId: number): Observable<registration[]> {\n  return this.http.get<registration[]>(`http://localhost:8089/skillswap/eventregistration/get_all_registration/${eventId}`);\n}\n\ngetregistrationuser(registrationId: number): Observable<User> {\n  return this.http.get<User>(`http://localhost:8089/skillswap/eventregistration/getregistrationuser/${registrationId}`);\n}\n\ndeleteregistraion(registrationId: number): Observable<void> {\n  return this.http.delete<void>(`http://localhost:8089/skillswap/eventregistration/deleteEventRegistration/${registrationId}`);\n}\n\nmailing(userId: number, eventId: number, htmlContent?: string): Observable<string> {\n  return this.http.post(\n    `${this.baseUrl}/send_event_notification/${userId}/${eventId}`,\n    null,\n    { responseType: 'text' as const }  \n  );\n}\n\n\n}"],"mappings":";;AAUA,OAAM,MAAOA,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uCAAuC;EAEjB;EAExCC,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,OAAO,kBAAkBE,EAAE,EAAE,CAAC;EACtE;EACAE,WAAWA,CAACC,KAAc;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,OAAO,WAAW,EAAEK,KAAK,CAAC;EACnE;EACAE,WAAWA,CAACL,EAAU,EAAEG,KAAc;IACpC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,OAAO,cAAc,EAAEK,KAAK,CAAC;EACrE;EACAI,WAAWA,CAACP,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,gBAAgBE,EAAE,EAAE,CAAC;EAC9D;EACAS,YAAYA,CAAA;IACV,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,cAAc,CAAC;EAChE;EACFY,QAAQA,CAACC,YAA0B,EAAEC,MAAc,EAAEC,OAAe;IAClE,OAAO,IAAI,CAAChB,IAAI,CAACO,IAAI,CAAe,0FAA0FQ,MAAM,IAAIC,OAAO,EAAE,EAAEF,YAAY,CAAC;EAClK;EAEAG,MAAMA,CAAED,OAAe;IACrB,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAM,6DAA6DY,OAAO,EAAE,CAAC;EACnG;EAEAE,YAAYA,CAACF,OAAe;IAC1B,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAS,sEAAsEY,OAAO,EAAE,CAAC;EAC/G;EAEAG,qBAAqBA,CAACH,OAAe;IACnC,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAiB,0EAA0EY,OAAO,EAAE,CAAC;EAC3H;EAEAI,mBAAmBA,CAACC,cAAsB;IACxC,OAAO,IAAI,CAACrB,IAAI,CAACI,GAAG,CAAO,yEAAyEiB,cAAc,EAAE,CAAC;EACvH;EAEAC,iBAAiBA,CAACD,cAAsB;IACtC,OAAO,IAAI,CAACrB,IAAI,CAACW,MAAM,CAAO,6EAA6EU,cAAc,EAAE,CAAC;EAC9H;EAEAE,OAAOA,CAACR,MAAc,EAAEC,OAAe,EAAEQ,WAAoB;IAC3D,OAAO,IAAI,CAACxB,IAAI,CAACO,IAAI,CACnB,GAAG,IAAI,CAACN,OAAO,4BAA4Bc,MAAM,IAAIC,OAAO,EAAE,EAC9D,IAAI,EACJ;MAAES,YAAY,EAAE;IAAe,CAAE,CAClC;EACH;;AAnDa3B,mBAAmB,C;mBAAnBA,mBAAmB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnB/B,mBAAmB,C;SAAnBA,mBAAmB;EAAAgC,OAAA,EAAnBhC,mBAAmB,CAAAiC,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}