{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EventComponent = class EventComponent {\n  constructor(route, eventService, router) {\n    this.route = route;\n    this.eventService = eventService;\n    this.router = router;\n    this.Events = [];\n    this.searchname = '';\n    this.registration = {\n      isSelected: false,\n      eventregis: {},\n      user: {}\n    };\n    this.ratingMessage = null;\n    this.participants = [];\n  }\n  ngOnInit() {\n    this.eventService.getAllEvents().subscribe(data => {\n      this.Events = data;\n      console.log('Fetched events:', data);\n    }, error => {\n      console.error('Error fetching events', error);\n    });\n  }\n  deleteEvent(eventId) {\n    const confirmDelete = window.confirm('Are you sure you want to delete this event?');\n    if (confirmDelete) {\n      this.eventService.deleteEvent(eventId).subscribe(response => {\n        this.Events = this.Events.filter(event => event.eventId !== eventId);\n        console.log('Event deleted successfully:', response);\n      }, error => {\n        console.error('Error deleting event:', error);\n      });\n    } else {\n      console.log('Event deletion cancelled');\n    }\n  }\n  onSearch() {\n    if (!this.searchname) {\n      return this.Events;\n    }\n    return this.Events.filter(myevent => myevent.eventName.toLowerCase().includes(this.searchname.toLowerCase()));\n  }\n  register(eventId) {\n    const userId = 1;\n    this.registration.user = {\n      userId\n    };\n    this.registration.eventregis.eventId = Number(this.route.snapshot.paramMap.get('id'));\n    this.eventService.register(this.registration, userId, eventId).subscribe(response => {\n      console.log('User registered successfully:', response);\n      alert('You have successfully registered for the event!');\n    }, error => {\n      console.error('Error registering user:', error);\n      alert('An error occurred during registration.');\n    });\n  }\n  rating(eventid) {\n    return this.eventService.rating(eventid).subscribe(response => {\n      console.log('Event rating:', response);\n      this.ratingMessage = `Event rating: ${response}`;\n    }, error => {\n      console.error('Error retrieving rating:', error);\n      this.ratingMessage = 'An error occurred while fetching the rating.';\n    });\n  }\n  getParticipants(eventId) {\n    this.eventService.participants(eventId).subscribe(response => {\n      this.participants = response;\n      console.log('Participants:', response);\n    }, error => {\n      console.error('Error retrieving participants:', error);\n    });\n  }\n};\nEventComponent = __decorate([Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})], EventComponent);","map":{"version":3,"names":["Component","EventComponent","constructor","route","eventService","router","Events","searchname","registration","isSelected","eventregis","user","ratingMessage","participants","ngOnInit","getAllEvents","subscribe","data","console","log","error","deleteEvent","eventId","confirmDelete","window","confirm","response","filter","event","onSearch","myevent","eventName","toLowerCase","includes","register","userId","Number","snapshot","paramMap","get","alert","rating","eventid","getParticipants","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\4 ARCTIC YOUSSEF\\PI\\user+event+course\\PI\\final\\dashboard-v2\\src\\app\\eventbackoffice\\event\\event.component.ts"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { EventserviceService } from 'src/app/eventbackoffice/serviceseventback/eventservice.service';\nimport { registerLocaleData } from '@angular/common';\nimport { myevent } from '../../event';\nimport { registration } from '../../registration';\nimport { User } from 'src/app/back-office/models/user'; \n\n\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent {\n\n  Events: myevent[] = [];\n\n  constructor(private route: ActivatedRoute, private eventService: EventserviceService, private router: Router ) {}\n\n \n  ngOnInit(): void {\n    this.eventService.getAllEvents().subscribe(\n      data => {\n        this.Events = data;\n        console.log('Fetched events:', data); \n\n      },\n      error => {\n        console.error('Error fetching events', error);\n      });}\n      deleteEvent(eventId: number): void {\n        const confirmDelete = window.confirm('Are you sure you want to delete this event?');\n        \n        if (confirmDelete) {\n          this.eventService.deleteEvent(eventId).subscribe(\n            response => {\n              this.Events = this.Events.filter(event => event.eventId !== eventId);\n              console.log('Event deleted successfully:', response);\n            },\n            error => {\n              console.error('Error deleting event:', error);\n            }\n          );\n        } else {\n          console.log('Event deletion cancelled');\n        }\n      }\n    \n      searchname:string = '';\n      onSearch(): myevent[] {\n        if (!this.searchname) {\n          return this.Events;\n        }\n        return this.Events.filter((myevent) =>\n          myevent.eventName.toLowerCase().includes(this.searchname.toLowerCase())\n      );\n      }\n      registration: registration = {\n        isSelected: false,\n        eventregis: {} as myevent,\n        user: {} as any\n      };\n      register(eventId: number): void {\n        const userId = 1; \n        this.registration.user = { userId };\n        this.registration.eventregis.eventId = Number(this.route.snapshot.paramMap.get('id'));\n\n        this.eventService.register(this.registration,userId,eventId).subscribe(\n          response => {\n            console.log('User registered successfully:', response);\n            alert('You have successfully registered for the event!');\n          },\n          error => {\n            console.error('Error registering user:', error);\n            alert('An error occurred during registration.');\n          }\n        );\n      }\n\n      ratingMessage: string | null = null;\n\n      rating(eventid: number) {\n        return this.eventService.rating(eventid).subscribe(\n          response => {\n            console.log('Event rating:', response);\n            this.ratingMessage = `Event rating: ${response}`;\n          },\n          error => {\n            console.error('Error retrieving rating:', error);\n            this.ratingMessage = 'An error occurred while fetching the rating.';\n          }\n        );\n      }\n\n      participants: User[] = [];\n\n      getParticipants(eventId: number): void {\n        this.eventService.participants(eventId).subscribe(\n          response => {\n            this.participants = response;\n            console.log('Participants:', response);\n          },\n          error => {\n            console.error('Error retrieving participants:', error);\n          }\n        );\n      }\n\n      \n      }\n      \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}