{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8089/skillswap/categories';\n  }\n  getAllCategories() {\n    return this.http.get(this.baseUrl);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  addCategory(category) {\n    return this.http.post(`${this.baseUrl}/addcategory`, category);\n  }\n  updateCategory(category) {\n    return this.http.put(`${this.baseUrl}`, category);\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${this.baseUrl}/deletecategory/${id}`);\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CategoryService","constructor","http","baseUrl","getAllCategories","get","getCategoryById","id","addCategory","category","post","updateCategory","put","deleteCategory","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sakka\\Desktop\\Prépa\\final\\dashboard-v2\\src\\app\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../back-office/models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private baseUrl = 'http://localhost:8089/skillswap/categories';\n\n  constructor(private http: HttpClient) { }\n\n  getAllCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.baseUrl);\n  }\n\n  getCategoryById(id: number): Observable<Category> {\n    return this.http.get<Category>(`${this.baseUrl}/${id}`);\n  }\n\n  addCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(`${this.baseUrl}/addcategory`, category);\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.baseUrl}`, category);\n  }\n\n  deleteCategory(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/deletecategory/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,4CAA4C;EAEtB;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,CAAC;EAChD;EAEAG,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAII,EAAE,EAAE,CAAC;EACzD;EAEAC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,GAAG,IAAI,CAACP,OAAO,cAAc,EAAEM,QAAQ,CAAC;EAC1E;EAEAE,cAAcA,CAACF,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,OAAO,EAAE,EAAEM,QAAQ,CAAC;EAC7D;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,mBAAmBI,EAAE,EAAE,CAAC;EACjE;;AAvBWP,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}