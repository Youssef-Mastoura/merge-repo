{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/skillswap/contents'; // URL de base de l'API\n  }\n\n  getContentsByCourseId(courseId) {\n    return this.http.get(`${this.apiUrl}/course/${courseId}`);\n  }\n  addContent(content, courseId) {\n    return this.http.post(`${this.apiUrl}/course/${courseId}/addContent`, content);\n  }\n  updateContent(content) {\n    return this.http.put(`${this.apiUrl}/${content.id_Content}`, content);\n  }\n  deleteContent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nContentService.ɵfac = function ContentService_Factory(t) {\n  return new (t || ContentService)(i0.ɵɵinject(i1.HttpClient));\n};\nContentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContentService,\n  factory: ContentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ContentService","constructor","http","apiUrl","getContentsByCourseId","courseId","get","addContent","content","post","updateContent","put","id_Content","deleteContent","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\4 ARCTIC YOUSSEF\\PI\\user+event+course\\PI\\final\\dashboard-v2\\src\\app\\services\\content.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Content } from '../back-office/models/content.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n  private apiUrl = 'http://localhost:8089/skillswap/contents'; // URL de base de l'API\n\n  constructor(private http: HttpClient) { }\n\n  getContentsByCourseId(courseId: number): Observable<Content[]> {\n    return this.http.get<Content[]>(`${this.apiUrl}/course/${courseId}`);\n  }\n\n  addContent(content: Content, courseId: number): Observable<Content> {\n    return this.http.post<Content>(`${this.apiUrl}/course/${courseId}/addContent`, content);\n\n  }\n  \n\n  updateContent(content: Content): Observable<Content> {\n    return this.http.put<Content>(`${this.apiUrl}/${content.id_Content}`, content);\n  }\n\n  deleteContent(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,0CAA0C,CAAC,CAAC;EAErB;;EAExCC,qBAAqBA,CAACC,QAAgB;IACpC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,MAAM,WAAWE,QAAQ,EAAE,CAAC;EACtE;EAEAE,UAAUA,CAACC,OAAgB,EAAEH,QAAgB;IAC3C,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,MAAM,WAAWE,QAAQ,aAAa,EAAEG,OAAO,CAAC;EAEzF;EAGAE,aAAaA,CAACF,OAAgB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,MAAM,IAAIK,OAAO,CAACI,UAAU,EAAE,EAAEJ,OAAO,CAAC;EAChF;EAEAK,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIW,EAAE,EAAE,CAAC;EACvD;;AArBWd,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}